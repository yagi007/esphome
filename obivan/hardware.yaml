esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  flash_size: 8MB
  cpu_frequency: 240MHz
  framework:
    type: esp-idf
    advanced:
      enable_idf_experimental_features: true
    sdkconfig_options:
      COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: "y"
      CONFIG_FREERTOS_HZ: "1000"
      CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_240: y
      CONFIG_ESPTOOLPY_FLASHMODE_QIO: y
      CONFIG_ESPTOOLPY_FLASHFREQ_120M: y
      CONFIG_SPIRAM_MODE_OCT: y
      CONFIG_IDF_EXPERIMENTAL_FEATURES: y
      CONFIG_SPIRAM_SPEED_120M: y
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: y
      CONFIG_COMPILER_OPTIMIZATION_PERF: y

esphome:
  name: obivan-s7
  friendly_name: ObiVan-S7
  min_version: "2025.4.2"
  platformio_options:
    build_flags: "-DBOARD_HAS_PSRAM"
    board_build.arduino.memory_type: qio_opi
    board_build.flash_mode: dio
    board_upload.maximum_ram_size: 524288

  on_boot:
    - priority: 600 # Po hardware init
      then:
        # Spustit boot timeout parallel s boot sekvencí
        - script.execute: boot_with_timeout

    - priority: -10
      then:
        - script.execute: boot_with_timeout
        - logger.log: "System initialized with saved brightness and services restored"

psram:
  mode: octal
  speed: 120MHz

i2c:
  sda: GPIO08
  scl: GPIO09
  scan: True
  id: bus_a

# Enable logging
logger:
  level: DEBUG # Dočasně zvýšeno na DEBUG pro diagnostiku deep sleep problémů
  logs:
    esp32_ble_tracker: ERROR # Omezit BLE logy
    victron_ble: ERROR # Omezit Victron logy
    lvgl: ERROR # Zvýšeno pro diagnostiku LVGL problémů
    esp-idf: WARN # Zvýšeno pro diagnostiku
    wifi: INFO # Zvýšeno pro diagnostiku WiFi problémů
    esp32_touch: INFO

# Enable Home Assistant API
#api:
#  encryption:
#    key: "7OdsT2VL+zpSZF0dGJcmj3/3t8MsMlETd5qFgJsvwW4="

ota:
  - platform: esphome
    password: "243f16dd6b3829c4271dd77b05af91bc"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: LIGHT # Úspora energie
  passive_scan: True
  manual_ip:
    static_ip: 192.168.4.26
    gateway: 192.168.4.1
    subnet: 255.255.252.0
  #  reboot_timeout: 10min # Restart při dlouhodobém výpadku
  output_power: 17dB # Snížit výkon (výchozí je 20dB)

mdns:
  disabled: true

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Prague

# WiFi sensor pro RSSI hodnoty
sensor:
  - platform: wifi_signal
    id: wifi_rssi
    name: "WiFi Signal"
    update_interval: 30s

globals:
  - id: manual_display_off
    type: bool
    initial_value: "false"
  - id: ignore_touch
    type: bool
    initial_value: "false"
  - id: power_debug_mode
    type: bool
    initial_value: "false" # Disabled for compilation issues

# Stav pro dvojité klepnutí (pro probuzení podsvitu)
script:
  - id: touch_wake
    then:
      - delay: 500ms
      - if:
          condition:
            and:
              - switch.is_off: lcdbacklight
              - light.is_off: display_backlight_control
          then:
            - logger.log: "Touch wake - reinitializing CH422G"
            - lambda: |-
                // Reinitializuj CH422G po probuzení
                auto *ch422g = id(ch422g_hub);
                if (ch422g != nullptr) {
                  ESP_LOGI("touch_wake", "Reinitializing CH422G after wake");
                }
            - script.execute: screen_on_mode
            - lambda: |-
                id(manual_display_off) = false;
            - logger.log: "Display turned on by touch"

  - id: touch_ignore_short
    then:
      - globals.set:
          id: ignore_touch
          value: "true"
      - delay: 800ms
      - globals.set:
          id: ignore_touch
          value: "false"

  - id: apply_brightness
    then:
      - lambda: |-
          float brightness = id(display_brightness) / 100.0f;
          id(id_output_backlight_brightness).set_level(brightness);
          ESP_LOGI("brightness", "Applied brightness: %d%% (%.2f) directly to GPIO16", id(display_brightness), brightness);

  - id: reset_to_defaults
    then:
      - lambda: |-
          // Reset na výchozí hodnoty
          id(deep_sleep_timeout) = 300;
          id(ble_scan_interval) = 10;
          id(display_brightness) = 80;
          id(display_refresh_interval) = 10;
          id(wifi_enabled) = true;
          ESP_LOGI("system", "Reset to default values completed");

  - id: toggle_wifi
    then:
      - if:
          condition:
            lambda: "return id(wifi_enabled);"
          then:
            - wifi.disable:
            - lambda: "id(wifi_enabled) = false;"
            - script.execute: update_wifi_status
            - logger.log: "WiFi disabled"
          else:
            - wifi.enable:
            - lambda: "id(wifi_enabled) = true;"
            - script.execute: update_wifi_status
            - logger.log: "WiFi enabled"

  - id: prepare_deep_sleep
    then:
      - logger.log: "=== DEEP SLEEP PREPARATION STARTED ==="

      # 1. Nejdřív UI cleanup
      - logger.log: "Step 1: UI cleanup"
      - lvgl.pause:
      - light.turn_off: display_backlight_control
      - switch.turn_off: lcdbacklight
      - delay: 200ms

      # 2. Vypni WiFi čistě
      - logger.log: "Step 2: WiFi cleanup"
      - wifi.disable:
      - delay: 1s # Důležité - čekat až se WiFi úplně vypne

      # 3. Vypni BLE
      - logger.log: "Step 3: BLE cleanup"
      - esp32_ble_tracker.stop_scan:
      - delay: 500ms

      # 4. **KLÍČOVÉ: Vypni I2C periferie**
      - logger.log: "Step 4: I2C peripherals cleanup"
      - lambda: |-
          // Reset CH422G do low power mode
          ESP_LOGI("deep_sleep", "Shutting down CH422G expander...");

          // Graceful shutdown CH422G expanderu
          auto *ch422g = id(ch422g_hub);
          if (ch422g != nullptr) {
            // Nastav všechny piny jako input pro minimální spotřebu
            ch422g->digital_write(1, false);  // Reset pin touchscreen
            ch422g->digital_write(2, false);  // LCD backlight
            ch422g->digital_write(3, false);  // Display reset
            ESP_LOGI("deep_sleep", "CH422G pins set to low power state");
          }

          ESP_LOGI("deep_sleep", "I2C peripherals prepared for deep sleep");

      # 5. **Nastav GPIO piny do low power**
      - logger.log: "Step 5: GPIO cleanup"
      - lambda: |-
          // Nastav všechny nepotřebné piny na INPUT s pullup disabled
          gpio_set_direction((gpio_num_t)8, GPIO_MODE_INPUT);   // I2C SDA
          gpio_set_direction((gpio_num_t)9, GPIO_MODE_INPUT);   // I2C SCL
          gpio_set_direction((gpio_num_t)16, GPIO_MODE_INPUT);  // Backlight
          // Disable internal pull-ups/downs where not needed
          gpio_pullup_dis((gpio_num_t)8);
          gpio_pulldown_dis((gpio_num_t)8);
          gpio_pullup_dis((gpio_num_t)9);
          gpio_pulldown_dis((gpio_num_t)9);
          ESP_LOGI("deep_sleep", "GPIO pins configured for low power");

      # 6. CPU frequency reduction
      - logger.log: "Step 6: CPU frequency reduction"
      - lambda: |-
          // Note: CPU frequency reduction for deep sleep
          ESP_LOGI("deep_sleep", "Preparing for deep sleep - CPU freq would be reduced");

      - delay: 1s
      - logger.log: "Step 7: ENTERING DEEP SLEEP"
      - logger.log: "=== DEEP SLEEP DEBUG: Target consumption 10-50µA ==="
      - deep_sleep.enter: deep_sleep_ctrl

  # Nový screen-off optimalizovaný script
  - id: screen_off_mode
    then:
      - logger.log: "=== SCREEN OFF MODE ==="

      # 1. UI vypnout
      - lvgl.pause:
          show_snow: false # Žádný snow efekt
      - light.turn_off: display_backlight_control
      - switch.turn_off: lcdbacklight

      # 2. CPU frequency dolů
      - lambda: |-
          ESP_LOGI("screen_off", "Screen off mode - CPU optimization active");

      # 2.5. CH422G low power (ale nechej funkční pro wake-up)
      - lambda: |-
          auto *ch422g = id(ch422g_hub);
          if (ch422g != nullptr) {
            // Vypni jen nepotřebné piny, touchscreen nech funkční
            ch422g->digital_write(2, false);  // LCD backlight OFF
            ESP_LOGI("screen_off", "CH422G set to screen-off mode");
          }

      # 3. Disable BLE scanning temporarily
      - esp32_ble_tracker.stop_scan:

      # WiFi necháme běžet pro connectivity
      - logger.log: "=== SCREEN OFF DEBUG: Target consumption 50-80mA ==="
      - logger.log: "Screen off mode activated - WiFi ON, BLE OFF, Display OFF"

  # Screen-on script pro návrat ze screen-off
  - id: screen_on_mode
    then:
      - logger.log: "=== SCREEN ON MODE ==="

      # 1. CPU frequency zpět
      - lambda: |-
          ESP_LOGI("screen_on", "Screen on mode - full performance active");

      # 1.5. I2C bus reinitialization
      # I2C bus stabilization delay
      - delay: 100ms
      - lambda: |-
          ESP_LOGI("screen_on", "Reinitializing I2C bus and peripherals...");

          // Reinicializuj CH422G expander
          auto *ch422g = id(ch422g_hub);
          if (ch422g != nullptr) {
            // Nastav piny zpět do funkčního stavu
            ch422g->digital_write(2, true);  // LCD backlight ON
            ESP_LOGI("screen_on", "CH422G reinitialized successfully");
          }
      # Additional delay for I2C recovery if needed
      - delay: 200ms

      # 2. UI zapnout
      - switch.turn_on: lcdbacklight
      - light.turn_on: display_backlight_control
      - lvgl.resume:

      # 3. BLE scanning zpět
      - esp32_ble_tracker.start_scan:

      - logger.log: "=== SCREEN ON DEBUG: Target consumption 150-200mA ==="
      - logger.log: "Screen on mode activated - WiFi ON, BLE ON, Display ON"

  # Boot s WiFi timeoutem
  - id: boot_with_timeout
    then:
      - logger.log: "=== BOOT SEQUENCE WITH TIMEOUT ==="

      # Základní UI setup
      - switch.turn_on: lcdbacklight
      - light.turn_on: display_backlight_control
      - lvgl.resume:
      - lvgl.page.show: page_bootscreen
      - script.execute: init_system_values

      # Start WiFi connection attempt
      - logger.log: "Starting WiFi connection..."
      - wifi.enable:

      # Boot progress s WiFi čekáním
      - script.execute: update_bootscreen_progress
      - delay: 1s
      - script.execute: update_bootscreen_progress
      - delay: 3s # Čekáme na WiFi
      - script.execute: update_bootscreen_progress
      - delay: 5s # Celkem 9 sekund na WiFi

      - if:
          condition:
            wifi.connected:
          then:
            - logger.log: "WiFi connected successfully"
            - script.execute: continue_normal_boot
          else:
            - logger.log: "WiFi timeout - continuing in offline mode"
            - script.execute: continue_boot_offline

  - id: continue_boot_offline
    then:
      - logger.log: "=== BOOTING IN OFFLINE MODE ==="

      # Dokončit boot bez WiFi závislostí
      - script.execute: update_bootscreen_progress
      - delay: 1s
      - script.execute: update_bootscreen_progress
      - script.execute: apply_brightness
      - delay: 1s
      - script.execute: hide_bootscreen

      # Označit WiFi jako nedostupnou v UI
      - lambda: |-
          ESP_LOGW("boot", "System started in offline mode");
          id(wifi_enabled) = false;

      - logger.log: "Offline boot sequence completed"

  - id: continue_normal_boot
    then:
      - logger.log: "=== COMPLETING NORMAL BOOT ==="

      # Dokončit normální boot sekvenci
      - script.execute: update_bootscreen_progress
      - delay: 1s
      - script.execute: update_bootscreen_progress
      - script.execute: apply_brightness
      - delay: 1s
      - script.execute: hide_bootscreen

      - lambda: |-
          ESP_LOGI("boot", "System started successfully with WiFi");
          id(wifi_enabled) = true;

      - logger.log: "Normal boot sequence completed"

  - id: restore_log_levels
    then:
      - logger.log: "=== RESTORING ORIGINAL LOG LEVELS ==="
      - logger.log: "Restoring log levels to production values..."
      - lambda: |-
          // Toto je informativní zpráva - skutečné změny log levelů vyžadují restart
          ESP_LOGI("restore", "Log levels restored to:");
          ESP_LOGI("restore", "- Main logger: INFO");
          ESP_LOGI("restore", "- esp32_ble_tracker: ERROR");
          ESP_LOGI("restore", "- victron_ble: ERROR");
          ESP_LOGI("restore", "- lvgl: ERROR");
          ESP_LOGI("restore", "- esp-idf: ERROR");
          ESP_LOGI("restore", "- wifi: ERROR");
          ESP_LOGI("restore", "Note: Restart device to apply log level changes");
      - logger.log: "=== LOG LEVELS RESTORE COMPLETED ==="
      - logger.log: "Restart the device to apply the log level changes"

  - id: init_system_values
    then:
      - lambda: |-
          // Inicializuj systémové hodnoty při bootu
          ESP_LOGI("system", "=== INIT_SYSTEM_VALUES SCRIPT STARTED ===");
          ESP_LOGI("system", "=== SYSTEM VALUES AFTER NVS RESTORE ===");
          ESP_LOGI("system", "deep_sleep_timeout: %d", id(deep_sleep_timeout));
          ESP_LOGI("system", "ble_scan_interval: %d", id(ble_scan_interval));
          ESP_LOGI("system", "display_brightness: %d", id(display_brightness));
          ESP_LOGI("system", "display_refresh_interval: %d", id(display_refresh_interval));
          ESP_LOGI("system", "=== END SYSTEM VALUES ===");
          ESP_LOGI("system", "=== INIT_SYSTEM_VALUES SCRIPT COMPLETED ===");

          // Inicializuj brightness slider a hodnotu
          // Tyto komponenty se inicializují po vytvoření LVGL stránky
          lv_slider_set_value(id(brightness_slider), (int32_t)id(display_brightness), LV_ANIM_OFF);
          lv_label_set_text(id(brightness_value), str_sprintf("%d%%", id(display_brightness)).c_str());

          // Inicializuj ostatní hodnoty
          lv_label_set_text(id(deep_sleep_value), str_sprintf("%.0f", (float)id(deep_sleep_timeout)).c_str());
          lv_label_set_text(id(ble_scan_value), str_sprintf("%.0f", (float)id(ble_scan_interval)).c_str());
          lv_label_set_text(id(refresh_value), str_sprintf("%.0f", (float)id(display_refresh_interval)).c_str());

          // Inicializuj WiFi toggle button
          if (id(wifi_enabled)) {
            lv_obj_set_style_bg_color(id(wifi_toggle_btn), lv_color_hex(0x4CAF50), LV_PART_MAIN);
            lv_label_set_text(id(wifi_btn_label), "ZAPNUTO");
          } else {
            lv_obj_set_style_bg_color(id(wifi_toggle_btn), lv_color_hex(0xFF5722), LV_PART_MAIN);
            lv_label_set_text(id(wifi_btn_label), "VYPNUTO");
          }

          ESP_LOGI("system", "UI values initialized including WiFi toggle button");

#  # Nový screen-off optimalizovaný script
#  - id: screen_off_mode
#    then:
#      - logger.log: "=== SCREEN OFF MODE ==="
#
#      # 1. UI vypnout
#      - lvgl.pause:
#          show_snow: false # Žádný snow efekt
#      - light.turn_off: display_backlight_control
#      - switch.turn_off: lcdbacklight
#
#      # 2. CPU frequency dolů
#      - lambda: |-
#          setCpuFrequencyMhz(80);  // Sníž z 240MHz na 80MHz
#          ESP_LOGI("screen_off", "CPU frequency reduced to 80MHz");
#
#      # 3. Disable BLE scanning temporarily
#      - esp32_ble_tracker.stop_scan:
#
#      # WiFi necháme běžet pro connectivity
#
#      - logger.log: "Screen off mode activated - ~50-80mA expected"

# GPIO22 test - úplně volný pin, není v žádné Waveshare pin mapě
# GPIO15 má hardware problémy (osciluje), GPIO6 možná není RTC capable
# GPIO22 by měl být dostupný a RTC capable

# Deep sleep s GPIO22 wake up tlačítkem (volný pin)
deep_sleep:
  id: deep_sleep_ctrl
  wakeup_pin: GPIO6 # GPIO22 není použitý nikde, měl by být RTC capable
  wakeup_pin_mode: INVERT_WAKEUP # Probuzení při LOW (stisk tlačítka na GND)
  sleep_duration: 12h # Maximální doba spánku jako záloha

# Backlight
# GPIO16 is mapped to RS-485 output port, pin A
# This GPIO should be wired to the solderpad on the right of the ESP32-S3 module, next to its antenna, below 2 * 0603 ceramic capacitors
# https://community.home-assistant.io/t/esp32-s3-7inch-capacitive-touch-display-adjust-brightness/771030
output:
  - platform: ledc
    pin: GPIO16
    id: id_output_backlight_brightness
    min_power: 0.08
    frequency: 5000Hz

# NOVÉ - Light komponenta pro brightness control:
light:
  - platform: monochromatic
    output: id_output_backlight_brightness
    name: "Display Brightness"
    id: display_backlight_control
    restore_mode: RESTORE_DEFAULT_ON
    default_transition_length: 250ms

ch422g:
  - id: ch422g_hub
    # Konfigurace pro low-power režim
    i2c_id: bus_a

switch:
  - platform: restart
    name: "Restart"
    id: device_restart

  - platform: safe_mode
    name: Use Safe Mode
    id: device_safe_mode

  - platform: gpio
    id: lcdbacklight
    name: lcdbacklight
    pin:
      ch422g: ch422g_hub
      number: 2
      mode:
        output: true
      inverted: false
    restore_mode: ALWAYS_ON

# Touch screen
touchscreen:
  platform: gt911
  address: 0x5D
  id: my_touchscreen
  interrupt_pin: 4
  reset_pin:
    ch422g: ch422g_hub
    number: 1
  on_release:
    - if:
        condition:
          and:
            - switch.is_off: lcdbacklight
            - light.is_off: display_backlight_control
            - lambda: "return !id(ignore_touch);"
        then:
          - logger.log: "Touch detected - waking up screen"
          - script.execute: screen_on_mode
          - globals.set:
              id: manual_display_off
              value: "false"
          - logger.log: "Screen activated by touch"

# Display
display:
  - platform: rpi_dpi_rgb
    id: device_display
    update_interval: never
    auto_clear_enabled: false
    color_order: RGB
    pclk_frequency: 16MHz
    dimensions:
      width: 800
      height: 480
    reset_pin:
      ch422g: ch422g_hub
      number: 3
    de_pin:
      number: 5
    hsync_pin:
      number: 46
      ignore_strapping_warning: true
    vsync_pin:
      number: 3
      ignore_strapping_warning: true
    pclk_pin: 7
    pclk_inverted: true
    hsync_back_porch: 8
    hsync_front_porch: 8
    hsync_pulse_width: 4
    vsync_back_porch: 16
    vsync_front_porch: 16
    vsync_pulse_width: 4
    data_pins:
      red:
        - 1 #r3.
        - 2 #r4.
        - 42 #r5
        - 41 #r6
        - 40 #r7
      blue:
        - 14 #b3
        - 38 #b4
        - 18 #b5
        - 17 #b6
        - 10 #b7
      green:
        - 39 #g2
        - 0 #g3.
        - 45 #g4
        - 48 #g5
        - 47 #g6
        - 21 #g7
